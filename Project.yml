Description: >
  This Template will deploy EC2 Instance in an auto scaling group, a bastion host to ssh into the instances,
  Security Groups, s3 Object Read role IAM attached to our instances in our Auto scaling group and a Load Balancer

Parameters:
  EnvironmentName:
    Description: An environment name that will be prefixed to resource names
    Type: String

  KeyName:
    Description: This is the Key Pair for our instances
    Type: String

  ImageId:
    Description: This is the Image ID of the Auto Scaling group of instances
    Type: String

  myIp:
    Description: This is Ip address of your working machine
    Type: String

Resources:
  BHSecGroup:
    Type: AWS::EC2::SecurityGroup
    Description: The SecurityGroup to be attached to the Bastion Host. Access SSH from a specific Ip address alone
    Properties:
      GroupDescription: Traffic to and from the Load Balancer
      VpcId:
        Fn::ImportValue: !Sub ${EnvironmentName}-VPCID
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 22
        ToPort: 22
        CidrIp: !Ref myIp
      Tags:
        - Key: Name
          Value: Bastion Host SG
      
  LBSecGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Traffic to and from the Load Balancer
      VpcId:
        Fn::ImportValue: !Sub ${EnvironmentName}-VPCID
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp: 0.0.0.0/0

  WebServerSecGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow http to our hosts and SSH from local only
      VpcId:
        Fn::ImportValue: !Sub ${EnvironmentName}-VPCID
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp: 0.0.0.0/0
      - SourceSecurityGroupId: !Ref BHSecGroup
        IpProtocol: tcp
        FromPort: 22
        ToPort: 22
      SecurityGroupEgress:
      - IpProtocol: tcp
        FromPort: 0
        ToPort: 65535
        CidrIp: 0.0.0.0/0

  WebAppLaunchConfig:
    Type: AWS::AutoScaling::LaunchConfiguration
    Description: The Launch Configuration for the Auto scaling group
    Properties:
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          sudo apt-get update -y
          sudo apt-get install apache2 -y
          sudo systemctl start apache2.service
          sudo apt install unzip
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip awscliv2.zip
          sudo ./aws/install
          cd /var/www/html
          aws s3 cp s3://abbaswebapp . --recursive
      ImageId: !Ref ImageId
      IamInstanceProfile: !Ref s3InstanceProfile
      KeyName: !Ref KeyName
      SecurityGroups: 
      - Ref: WebServerSecGroup
      InstanceType: t3.medium
      BlockDeviceMappings:
      - DeviceName: "/dev/sdk"
        Ebs:
          VolumeSize: 10

  WebAppGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Description: The Auto scaling group
    Properties:
      VPCZoneIdentifier:
      - Fn::ImportValue: !Sub ${EnvironmentName}-PRV-NETS
      LaunchConfigurationName: !Ref WebAppLaunchConfig
      MinSize: '3'
      MaxSize: '5'
      TargetGroupARNs: 
      - Ref: WebAppTargetGroup

  BastionHost:
    Type: AWS::EC2::Instance
    Description: The Bastion Host Configuration
    Properties: 
      InstanceType: t2.micro
      ImageId: ami-0cff7528ff583bf9a
      KeyName: !Ref KeyName
      SecurityGroupIds:
        - Ref: BHSecGroup
      SubnetId: 
        Fn::ImportValue: !Sub ${EnvironmentName}-PUB-NET1 
      Tags:
        - Key: Name 
          Value: Bastion Host

  WebAppLB:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Subnets: 
      - Fn::ImportValue: !Sub ${EnvironmentName}-PUB-NET1
      - Fn::ImportValue: !Sub ${EnvironmentName}-PUB-NET2
      SecurityGroups:
      - Ref: LBSecGroup

  Listener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
      - Type: forward
        TargetGroupArn: !Ref WebAppTargetGroup
      LoadBalancerArn: !Ref WebAppLB
      Port: '80'
      Protocol: HTTP

  ALBListenerRule:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      Actions:
      - Type: forward
        TargetGroupArn: !Ref WebAppTargetGroup
      Conditions:
      - Field: path-pattern
        Values: [/]
      ListenerArn: !Ref Listener
      Priority: 1

  WebAppTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckIntervalSeconds: 10
      HealthCheckPath: /
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 8
      HealthyThresholdCount: 2
      Port: 80
      Protocol: HTTP
      UnhealthyThresholdCount: 5
      VpcId: 
        Fn::ImportValue:
          Fn::Sub: "${EnvironmentName}-VPCID"

  s3ReadRole:
    Type: AWS::IAM::Role
    Description: The s3 Read Role for instances in our Auto scaling group
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          -
            Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: "/"
      
  s3ReadPolicies:
    Description: The s3 Read and List Objects Policy
    Type: AWS::IAM::Policy
    Properties: 
      PolicyName: ec2reads3
      PolicyDocument:
        Version: "2012-10-17"
        Statement: 
          - Effect: Allow
            Action: 
              - s3:GetObject
              - s3:ListBucket
            Resource: "*"
      Roles: 
        - Ref: s3ReadRole

  s3InstanceProfile:
    Description: |
                  The Instance profile to be attached to instances in our Auto scaling group to enable them read
                  and copy files from the S3 Bucket
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: "/"
      Roles:
        - Ref: s3ReadRole

Outputs:
  LoadBalancer:
    Description: A reference to the Load Balancer
    Value: !Ref WebAppLB
    Export:
      Name: !Sub ${EnvironmentName}-LB


